Using cuda device
Shape of X [B, C, H, W]: torch.Size([8, 3, 256, 256])
Shape of y: torch.Size([8]) torch.int64
CNN(
  (conv1): Conv2d(3, 128, kernel_size=(4, 4), stride=(4, 4))
  (layernorm1): LayerNorm((128, 64, 64), eps=1e-05, elementwise_affine=True)
  (conv2): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
  (layernorm2): LayerNorm((128, 64, 64), eps=1e-05, elementwise_affine=True)
  (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
  (layernorm3): LayerNorm((256, 64, 64), eps=1e-05, elementwise_affine=True)
  (act1): GELU(approximate='none')
  (conv4): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
  (twod_avg_pool): AvgPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0)
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear): Linear(in_features=131072, out_features=3, bias=True)
)
Model size:  5462659
CNN(
  (conv1): Conv2d(3, 128, kernel_size=(4, 4), stride=(4, 4))
  (layernorm1): LayerNorm((128, 64, 64), eps=1e-05, elementwise_affine=True)
  (conv2): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
  (layernorm2): LayerNorm((128, 64, 64), eps=1e-05, elementwise_affine=True)
  (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
  (layernorm3): LayerNorm((256, 64, 64), eps=1e-05, elementwise_affine=True)
  (act1): GELU(approximate='none')
  (conv4): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
  (twod_avg_pool): AvgPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0)
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear): Linear(in_features=131072, out_features=3, bias=True)
)

Epoch 1
-------------------------------
Train batch avg loss = 0.953592  [    8/  523]
Train batch avg loss = 12.750483  [   88/  523]
Train batch avg loss = 9.604893  [  168/  523]
Traceback (most recent call last):
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 258, in <module>
    main(args)
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 225, in main
    train_one_epoch(train_dataloader, model, loss_fn, optimizer, t)
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 145, in train_one_epoch
    for batch, (X, y) in enumerate(dataloader):
                         ^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 734, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 790, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 37, in __getitem__
    image = Image.open(img_name).convert("RGB")  # Assuming RGB images
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/PIL/Image.py", line 986, in convert
    self.load()
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/PIL/ImageFile.py", line 390, in load
    n, err_code = decoder.decode(b)
                  ^^^^^^^^^^^^^^^^^
KeyboardInterrupt
