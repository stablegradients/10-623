Using cuda device
Shape of X [B, C, H, W]: torch.Size([8, 3, 256, 256])
Shape of y: torch.Size([8]) torch.int64
CNN(
  (conv1): Conv2d(3, 128, kernel_size=(4, 4), stride=(4, 4))
  (layernorm1): LayerNorm((128, 64, 64), eps=1e-05, elementwise_affine=True)
  (conv2): Conv2d(128, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3))
  (layernorm2): LayerNorm((128, 64, 64), eps=1e-05, elementwise_affine=True)
  (conv3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
  (layernorm3): LayerNorm((256, 64, 64), eps=1e-05, elementwise_affine=True)
  (act1): GELU(approximate='none')
  (conv4): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
  (twod_avg_pool): AdaptiveAvgPool2d(output_size=(2, 2))
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (linear): Linear(in_features=131072, out_features=3, bias=True)
)

Epoch 1
-------------------------------
x shape: torch.Size([8, 3, 256, 256])
x shape: torch.Size([8, 128, 64, 64])
x shape: torch.Size([8, 128, 64, 64])
x shape: torch.Size([8, 256, 64, 64])
x shape: torch.Size([8, 256, 64, 64])
x shape: torch.Size([8, 256, 64, 64])
x shape: torch.Size([8, 128, 64, 64])
Traceback (most recent call last):
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 268, in <module>
    main(args)
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 235, in main
    train_one_epoch(train_dataloader, model, loss_fn, optimizer, t)
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 158, in train_one_epoch
    pred = model(X)
           ^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/10-623/hw0/handout/img_classifier.py", line 136, in forward
    x = self.twod_avg_pool(x, (2, 2))
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/zfsauton2/home/shrinivr/miniconda3/envs/py312/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: AdaptiveAvgPool2d.forward() takes 2 positional arguments but 3 were given
